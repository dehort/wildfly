# translation auto-copied from project JBoss AS, version eap6, document org.jboss.as/jboss-as-logging/org/jboss/as/logging/LocalDescriptions, author angela.garcia
logging=La configuraci\u00F3n del sub-sistema de registro.
# translation auto-copied from project JBoss AS, version eap6, document org.jboss.as/jboss-as-logging/org/jboss/as/logging/LocalDescriptions, author angela.garcia
logging.add=Agregar el sub-sistema de registro.
# translation auto-copied from project JBoss AS, version eap6, document org.jboss.as/jboss-as-logging/org/jboss/as/logging/LocalDescriptions, author angela.garcia
logging.remove=Borrar el sub-sistema de registro.
logging.add-logging-api-dependencies=Indica si se deben agregar o no dependencias API de registro a las implementaciones durante el proceso de implementaci\u00F3n. Un valor de verdadero agregar\u00E1 las dependencias a la implementaci\u00F3n. Un valor de falso har\u00E1 que se salte el paso de registro de dependencias API para la implementaci\u00F3n.
logging.logging-profile=Un perfil que se puede asignar a una implementaci\u00F3n para su configuraci\u00F3n de registro.
logging.logging-profile.add=Agrega un perfil de registro.
logging.logging-profile.remove=Borra el perfil de registro y todos los registros y manejadores asociados.
logging.root-logger=Define el registro ra\u00EDz para este contexto de registros.
logging.root-logger.remove=Borre el registro ra\u00EDz. 
logging.root-logger.add=Agrega el registro ra\u00EDz. 
logging.root-logger.add-handler=Agrega un controlador al registro.
logging.root-logger.add-handler.name=El nombre del controlador a agregar.
logging.root-logger.remove-handler=Borra un controlador del registro.
logging.root-logger.remove-handler.name=El nombre del registro a borrar.
logging.root-logger.remove-root-logger=Borre el registro ra\u00EDz. 
logging.root-logger.remove-root-logger.deprecated=Use la operaci\u00F3n de borrado.
logging.root-logger.change-root-log-level=Cambia el nivel del registro ra\u00EDz. 
logging.root-logger.change-root-log-level.deprecated=Use la operaci\u00F3n write-attribute.
logging.root-logger.root-logger-assign-handler.deprecated=Use la operaci\u00F3n add-handler.
logging.root-logger.root-logger-assign-handler=Asigna un controlador al registro ra\u00EDz. 
logging.root-logger.root-logger-assign-handler.name=El nombre del controlador a agregar.
logging.root-logger.root-logger-unassign-handler=Desasignar un controlador del registro ra\u00EDz.
logging.root-logger.root-logger-unassign-handler.deprecated=Use la operaci\u00F3n remove-handler.
logging.root-logger.root-logger-unassign-handler.name=El nombre del controlador a borrar.
logging.root-logger.set-root-logger=Lo mismo que la operaci\u00F3n de agregado
logging.root-logger.set-root-logger.deprecated=Use la operaci\u00F3n agregar.
logging.logger=Define una categor\u00EDa de registro.
logging.logger.add=Agregar una nueva categor\u00EDa de registro.
logging.logger.remove=Borra una categor\u00EDa existente de registro.
logging.logger.add-handler=Agrega un controlador al registro.
logging.logger.add-handler.name=El nombre del controlador a agregar.
logging.logger.remove-handler=Borra un controlador del registro.
logging.logger.remove-handler.name=El nombre del registro a borrar.
logging.logger.change-log-level=Cambia el nivel de registro para una categor\u00EDa de registro.
logging.logger.change-log-level.deprecated=Use la operaci\u00F3n write-attribute.
logging.logger.assign-handler=Asigna un controlador a un registro.
logging.logger.assign-handler.deprecated=Use la operaci\u00F3n add-handler.
logging.logger.assign-handler.name=El nombre del controlador a agregar.
logging.logger.unassign-handler=Desasigna un controlador de un registro.
logging.logger.unassign-handler.deprecated=Use la operaci\u00F3n remove-handler.
logging.logger.unassign-handler.name=El nombre del controlador a borrar.
logging.logger.name=El nombre del registro.
logging.logger.use-parent-handlers=Especifica si este registro debe o no enviar su salida al registro padre.
logging.logger.category=Especifica la categor\u00EDa para el registro. 
logging.async-handler=Define un controlador, el cual escribe en los sub-controladores en un hilo asincr\u00F3nico. Utilizado para los controladores, el cual introduce una cantidad importante de retraso.
logging.async-handler.queue-length=La longitud de la cola a utilizar antes de vaciar la escritura
logging.async-handler.overflow-action=Especifica la acci\u00F3n a tomar al desbordarse.  Las opciones v\u00E1lidas son 'block' y 'discard'
logging.async-handler.subhandlers=Los controladores asociados con este controlador async.
logging.async-handler.subhandlers.handler=Los sub-controladores asociados con este controlador async.
logging.console-handler=Define un controlador el cual escribe en la consola.
logging.console-handler.add=Agregar un nuevo controlador de consola.
logging.file-handler=Define un controlador el cual escribe en un archivo.
logging.file-handler.add=Agregar un nuevo controlador de archivos.
logging.periodic-rotating-file-handler=Define un controlador, el cual escribe en un archivo rotando el registro despu\u00E9s de un periodo de tiempo derivado de la cadena dada del sufijo, el cual debe estar en un formato comprensible para java.text.SimpleDateFormat.
logging.periodic-rotating-file-handler.add=Agregar un nuevo controlador de archivos de rotaci\u00F3n peri\u00F3dica.
logging.periodic-rotating-file-handler.suffix=Establezca la cadena del sufijo.  La cadena est\u00E1 en un formato, elcual lo puede entender java.text.SimpleDateFormat. El periodo de la rotaci\u00F3n se calcula autom\u00E1ticamente con base en el sufijo.
logging.size-rotating-file-handler.add=Agregar un nuevo tama\u00F1o del controlador de archivos de rotaci\u00F3n.
logging.size-rotating-file-handler.max-backup-index=El n\u00FAmero m\u00E1ximo de copias de respaldo a mantener.
logging.size-rotating-file-handler.rotate-size=El tama\u00F1o al cual rotar el archivo de registros.
logging.size-rotating-file-handler.rotate-on-boot=Indica que el archivo se debe rotar cada vez que se cambia el atributo archivo. Esto siempre sucede en el momento de inicializaci\u00F3n.
logging.custom-handler=Defines un controlador de registro personalizado. El controlador personalizado debe extender java.util.logging.Handler.
logging.custom-handler.class=La clase del controlador de registro a utilizar.
logging.custom-handler.module=El m\u00F3dulo del cual depende el controlador de registros.
logging.custom-handler.properties=Define las propiedades utilizadas por el controlador de registros. Todas las propiedades deben ser accesibles por medio del m\u00E9todo setter.
logging.custom-handler.properties.name=Define el nombre de la propiedad a establecer.
logging.custom-handler.properties.value=Define el valor de la propiedad.
logging.syslog-handler=Define un controlador syslog.
logging.syslog-handler.add=Agrega un nuevo controlador syslog.
logging.syslog-handler.remove=Borra el controlador syslog.
logging.syslog-handler.app-name=El nombre de la aplicaci\u00F3n utilizado al formatear el mensaje en formato RFC5424. Por defecto el nombre de la aplicaci\u00F3n es "java".
logging.syslog-handler.facility=Funcionalidad tal como est\u00E1 definida por RFC-5424 (http\://tools.ietf.org/html/rfc5424) y RFC-3164 (http\://tools.ietf.org/html/rfc3164).
logging.syslog-handler.hostname=El nombre del host desde donde se est\u00E1n enviando los mensajes. Por ejemplo el nombre del host en donde est\u00E1 ejecutando el servidor de aplicaciones.
logging.syslog-handler.port=El puerto en el que el servidor syslog est\u00E1 escuchando.
logging.syslog-handler.server-address=La direcci\u00F3n del servidor syslog.
logging.syslog-handler.syslog-format=Formatea el mensaje de registro de acuerdo con la especificaci\u00F3n RFC.
logging.pattern-formatter=Un formateador de patr\u00F3n a utilizarse con los controladores.
logging.pattern-formatter.add=Agrega un nuevo formateador de patrones.
logging.pattern-formatter.remove=Borra el formateador del patr\u00F3n.
logging.pattern-formatter.pattern=Define un patr\u00F3n para el formateador.
logging.pattern-formatter.color-map=El atributo color-map permite definir una lista de colores a utilizarse para los diferentes niveles con un formateador de patrones. El formato para el patr\u00F3n de mapeo de colores es level-name\:color-name.Valid Niveles; severe, fatal, error, warn, warning, info, debug, trace, config, fine, finer, finest Colores v\u00E1lidos; black, green, red, yellow, blue, magenta, cyan, white, brightblack, brightred, brightgreen, brightblue, brightyellow, brightmagenta, brightcyan, brightwhite
logging.custom-formatter=Un formateador personalizado a utilizarse con los controladores. Note que a la mayor\u00EDa de los registros se les da formato con printf. Es posible que los formateadores requieran la invocaci\u00F3n del org.jboss.logmanager.ExtLogRecord\#getFormattedMessage() para que el mensaje se formatee apropiadamente.
logging.custom-formatter.add=Agrega un nuevo formateador personalizado.
logging.custom-formatter.remove=Borra el formateador personalizado.
logging.custom-formatter.class=La clase del controlador de registro a utilizar.
logging.custom-formatter.module=El m\u00F3dulo del cual depende el controlador de registros.
logging.custom-formatter.properties=Define las propiedades utilizadas por el controlador de registros. Todas las propiedades deben ser accesibles por medio del m\u00E9todo setter.
logging.custom-formatter.properties.name=Define el nombre de la propiedad a establecer.
logging.custom-formatter.properties.value=Define el valor de la propiedad.
