# translation auto-copied from project JBoss AS, version eap6, document org.jboss.as/jboss-as-logging/org/jboss/as/logging/LocalDescriptions, author ldelima@redhat.com
logging=A configura\u00E7\u00E3o do subsistema de registro em log.
# translation auto-copied from project JBoss AS, version eap6, document org.jboss.as/jboss-as-logging/org/jboss/as/logging/LocalDescriptions, author ldelima@redhat.com
logging.add=Adiciona o subsistema de registro em log.
# translation auto-copied from project JBoss AS, version eap6, document org.jboss.as/jboss-as-logging/org/jboss/as/logging/LocalDescriptions, author ldelima@redhat.com
logging.remove=Remove o subsistema de registro em log.
logging.add-logging-api-dependencies=Indica se \u00E9 que ou n\u00E3o as depend\u00EAncias API devem ser adicionadas \u00E0s implanta\u00E7\u00F5es durante o processo de implanta\u00E7\u00E3o. O valor verdadeiro ir\u00E1 adicionar depend\u00EAncias \u00E0 implanta\u00E7\u00E3o. O valor falso ir\u00E1 ignorar o processo da implanta\u00E7\u00E3o para as depend\u00EAncias de logging API.
logging.logging-profile=O perfil que pode ser determinado a uma implanta\u00E7\u00E3o para sua pr\u00F3pria configura\u00E7\u00E3o de registro em log.
logging.logging-profile.add=Adiciona um perfil de registro em log.
logging.logging-profile.remove=Remove o perfil de registro de log e todos os  agentes de log associados e manuseadores.
logging.root-logger=Define o agente de log da raiz para este contexto de log.
logging.root-logger.remove=Remove o agente de log da raiz.
logging.root-logger.add=Adiciona o agente de log da raiz.
logging.root-logger.add-handler=Adiciona um manuseador ao agente de log.
logging.root-logger.add-handler.name=O nome do manuseador a ser adicionado.
logging.root-logger.remove-handler=Remove o manuseador a partir do agente de log.
logging.root-logger.remove-handler.name=O nome do agente de log a ser removido.
logging.root-logger.remove-root-logger=Remove o agente de log da raiz.
logging.root-logger.remove-root-logger.deprecated=Usa a opera\u00E7\u00E3o remover.
logging.root-logger.change-root-log-level=Altera o n\u00EDvel do agente de log da raiz.
logging.root-logger.change-root-log-level.deprecated=Usa a opera\u00E7\u00E3o write-attribute.
logging.root-logger.root-logger-assign-handler.deprecated=Usa a opera\u00E7\u00E3o add-handler.
logging.root-logger.root-logger-assign-handler=Determina um Manuseador ao agente de log da raiz.
logging.root-logger.root-logger-assign-handler.name=O nome do manuseador a ser adicionado.
logging.root-logger.root-logger-unassign-handler=Cancela a determina\u00E7\u00E3o do Manuseador a partir do agente em log da raiz.
logging.root-logger.root-logger-unassign-handler.deprecated=Usa a opera\u00E7\u00E3o remove-handler.
logging.root-logger.root-logger-unassign-handler.name=O nome do manuseador a ser removido.
logging.root-logger.set-root-logger=\u00C9 o mesmo que adicionar a opera\u00E7\u00E3o
logging.root-logger.set-root-logger.deprecated=Usa a opera\u00E7\u00E3o adicionar.
logging.logger=Define uma categoria do agente em log.
logging.logger.add=Adiciona a nova categoria do agente em log.
logging.logger.remove=Remove uma categoria do agente em log existente.
logging.logger.add-handler=Adiciona um manuseador ao agente em log.
logging.logger.add-handler.name=O nome do manuseador a ser adicionado.
logging.logger.remove-handler=Remove o manuseador a partir do agente em log.
logging.logger.remove-handler.name=O nome do agente de log a ser removido.
logging.logger.change-log-level=Altera o n\u00EDvel do registro de log para a categoria de registrador de log.
logging.logger.change-log-level.deprecated=Usa a opera\u00E7\u00E3o write-attribute.
logging.logger.assign-handler=Determina o Manuseador a um Agente em Log.
logging.logger.assign-handler.deprecated=Usa a opera\u00E7\u00E3o add-handler.
logging.logger.assign-handler.name=O nome do manuseador a ser adicionado.
logging.logger.unassign-handler=Cancela a determina\u00E7\u00E3o de um Manuseador a partir do Registrador do Log.
logging.logger.unassign-handler.deprecated=Usa a opera\u00E7\u00E3o remove-handler.
logging.logger.unassign-handler.name=O nome do manuseador a ser removido.
logging.logger.name=Nome do agente em log
logging.logger.use-parent-handlers=Especifica se \u00E9 que este agente em log deve enviar seu resultado ao seu Agente em Log pai.
logging.logger.category=Especifica a categoria para o agente em log.
logging.async-handler=Define um manuseador que escreve os sub-manuseadores numa segmenta\u00E7\u00E3o ass\u00EDncrona. Usado por manuseadores que introduzem uma quantia substancial de atraso.
logging.async-handler.queue-length=O comprimento da fila a ser usada antes da grava\u00E7\u00E3o de esvaziamento
logging.async-handler.overflow-action=Especifica qual a\u00E7\u00E3o a ser tomada quando estiver cheio, As op\u00E7\u00F5es v\u00E1lidas s\u00E3o 'bloquear' e 'descartar'
logging.async-handler.subhandlers=Os Manuseadores associados com esse manuseador ass\u00EDncrono.
logging.async-handler.subhandlers.handler=O submanuseador associado com esse manuseador ass\u00EDncrono.
logging.console-handler=Define um manuseador que escreve no console.
logging.console-handler.add=Adiciona um novo manuseador do console.
logging.file-handler=Define o manuseador que grava num arquivo.
logging.file-handler.add=Adiciona um novo manuseador de arquivo.
logging.periodic-rotating-file-handler=Define o manuseador que grava a um arquivo, roteando o log ap\u00F3s um determinado per\u00EDodo derivado a partir da sequ\u00EAncia de sufixo gerada, que deve estar num formato entendido pelo java.text.SimpleDateFormat.
logging.periodic-rotating-file-handler.add=Adiciona um novo manuseador de arquivo de rota\u00E7\u00E3o peri\u00F3dica.
logging.periodic-rotating-file-handler.suffix=Determina a sequ\u00EAncia do sufixo. A sequ\u00EAncia est\u00E1 num formato que pode ser entendida pelo java.text.SimpleDateFormat. O per\u00EDodo de rota\u00E7\u00E3o \u00E9 automaticamente calculado baseado no sufixo.
logging.size-rotating-file-handler.add=Adiciona o novo tamanho de manuseador de arquivo de rotea\u00E7\u00E3o.
logging.size-rotating-file-handler.max-backup-index=O n\u00FAmero m\u00E1ximo de back-ups a ser mantido.
logging.size-rotating-file-handler.rotate-size=O tamanho pelo qual rotear o arquivo de log.
logging.size-rotating-file-handler.rotate-on-boot=Indica que o arquivo deve ser rodado toda a vez que o atributo do arquivo \u00E9 alterado. Isto ocorre no per\u00EDodo de inicializa\u00E7\u00E3o. 
logging.custom-handler=Define uma manuseador de registro de log. O manuseador de log deve estender o java.util.logging.Handler.
logging.custom-handler.class=A classe do manuseador de registro de log a ser usada. 
logging.custom-handler.module=O m\u00F3dulo que o manuseador de registro de log baseia-se.
logging.custom-handler.properties=Define as propriedades usadas para o manuseador do registro de log. Todas as propriedades devem ser acess\u00EDveis atrav\u00E9s do m\u00E9todo setter.
logging.custom-handler.properties.name=Define o nome da propriedade a ser configurada.
logging.custom-handler.properties.value=Define o valor da propriedade.
logging.syslog-handler=Define um manuseador syslog.
logging.syslog-handler.add=Adiciona um novo manuseador syslog.
logging.syslog-handler.remove=Remove o manuseador syslog.
logging.syslog-handler.app-name=O nome do aplicativo usado quando formatando a mensagem no formato RFC5424. O nome do aplicativo por default \u00E9 "java".
logging.syslog-handler.facility=Facilidade conforme definida pelo RFC-5424 (http\://tools.ietf.org/html/rfc5424) e RFC-3164 (http\://tools.ietf.org/html/rfc3164).
logging.syslog-handler.hostname=O nome do host das mensagens sendo enviadas. Por exemplo, o nome do host que o aplicativo do servidor est\u00E1 sendo executado.
logging.syslog-handler.port=A porta que servidor syslog est\u00E1 escutando. 
logging.syslog-handler.server-address=O endere\u00E7o do servidor syslog.
logging.syslog-handler.syslog-format=Formata a mensagem do log de acordo com a especifica\u00E7\u00E3o RFC.
logging.pattern-formatter=O formatador padr\u00E3o a ser usado com os manuseadores.
logging.pattern-formatter.add=Adiciona um novo formatador padr\u00E3o.
logging.pattern-formatter.remove=Remove um formatador padr\u00E3o.
logging.pattern-formatter.pattern=Define o padr\u00E3o para o formatador.
logging.pattern-formatter.color-map=O atributo color-map permite que a lista de cores delimitada por v\u00EDrgula seja usada por n\u00EDveis diferentes com um formatador padr\u00E3o. O formato de padr\u00E3o de mapeamento de cor \u00E9  level-name\:color-name.Valid Levels; severo, fatal, erro, aviso, aten\u00E7\u00E3o, informa\u00E7\u00E3o, depura\u00E7\u00E3o, tra\u00E7o, configura\u00E7\u00E3o, fino, fin\u00EDssimo, Cores V\u00E1lidas mais finas; preto, verde, vermelho, amarelo, azul, mangueta, ciano, branco, preto brilhante, vermelho brilhante, verde brilhante, azul brilhante, amarelo brilhante, ciano brilhante, branco brilhante 
logging.custom-formatter=Um formatador personalizado a ser usado com os manuseadores. Perceba que a maioria das grava\u00E7\u00F5es de log s\u00E3o formatadas no formato printf. Os formatadores podem requerer a invoca\u00E7\u00E3o do Formatters org.jboss.logmanager.ExtLogRecord\#getFormattedMessage() para a mensagem ser formatada de forma apropriada.
logging.custom-formatter.add=Adiciona um novo formatador personalizado.
logging.custom-formatter.remove=Remove um formatador personalizado.
logging.custom-formatter.class=A classe de manuseador de logging a ser usada.
logging.custom-formatter.module=O m\u00F3dulo que o manuseador de logging depende.
logging.custom-formatter.properties=Define as propriedades a serem usadas pelo manuseador de logging. Todas as propriedades devem ser acess\u00EDveis atrav\u00E9s do m\u00E9todo setter.
logging.custom-formatter.properties.name=Define o nome da propriedade a ser configurada.
logging.custom-formatter.properties.value=Define o valor da propriedade.
